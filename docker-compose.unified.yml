version: '3.8'

# 统一的Docker Compose配置
# 支持完整的微服务架构部署

networks:
  soybean-admin:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  generated_code:
    driver: local
  amis_generated:
    driver: local
  logs_data:
    driver: local
  uploads_data:
    driver: local

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: soybean-postgres
    environment:
      TZ: Asia/Shanghai
      POSTGRES_DB: soybean_admin
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - '25432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - soybean-admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d soybean_admin"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: soybean-redis
    environment:
      TZ: Asia/Shanghai
    command: redis-server --appendonly yes
    ports:
      - '26379:6379'
    volumes:
      - redis_data:/data
    networks:
      - soybean-admin
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # 主后端服务
  backend:
    build:
      context: backend/
      dockerfile: Dockerfile
    container_name: soybean-backend
    environment:
      TZ: Asia/Shanghai
      SERVICE_NAME: backend
      NODE_ENV: production
      APP_PORT: 9528
      
      # 数据库配置
      DATABASE_URL: 'postgresql://postgres:password@postgres:5432/soybean_admin?schema=public'
      DIRECT_DATABASE_URL: 'postgresql://postgres:password@postgres:5432/soybean_admin?schema=public'
      
      # Redis配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ''
      REDIS_DB: 0
      
      # 统一JWT认证配置
      JWT_SECRET: 'soybean-admin-jwt-secret-key-change-in-production-environment-32chars'
      REFRESH_TOKEN_SECRET: 'soybean-admin-refresh-secret-key-change-in-production-environment-32chars'
      SERVICE_SECRET: 'soybean-admin-service-secret-key-change-in-production-environment-32chars'
      JWT_EXPIRES_IN: '2h'
      REFRESH_TOKEN_EXPIRES_IN: '7d'
      JWT_ISSUER: 'soybean-admin'
      JWT_AUDIENCE: 'soybean-admin-client'
      JWT_ALGORITHM: 'HS256'
      ENABLE_TOKEN_BLACKLIST: 'true'
      ENABLE_SESSION_MANAGEMENT: 'true'
      
      # Docker部署配置
      DOCKER_ENV: 'true'
      AUTO_INIT_DATA: 'true'
      FIRST_RUN_DETECTION: 'true'
      RUN_MIGRATIONS: 'true'
      HEALTH_CHECK_ENABLED: 'true'
      
      # Swagger配置
      DOC_SWAGGER_ENABLE: 'true'
      DOC_SWAGGER_PATH: 'api-docs'
      
      # CORS配置
      CORS_ENABLED: 'true'
      CORS_ORIGIN: 'http://localhost:9527,http://127.0.0.1:9527,http://localhost:3000,http://127.0.0.1:3000,http://localhost:9522,http://127.0.0.1:9522'
      CORS_METHODS: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS'
      CORS_CREDENTIALS: 'true'
      
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '9528:9528'
    networks:
      - soybean-admin
    volumes:
      - logs_data:/app/logs
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9528/v1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # 低代码平台后端
  lowcode-platform:
    build:
      context: lowcode-platform-backend/
      dockerfile: Dockerfile
    container_name: soybean-lowcode-platform
    environment:
      TZ: Asia/Shanghai
      SERVICE_NAME: lowcode-platform
      NODE_ENV: production
      PORT: 3000

      # 数据库配置
      DATABASE_URL: 'postgresql://postgres:password@postgres:5432/soybean_admin?schema=public'

      # Redis配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ''
      REDIS_DB: 1

      # 统一JWT认证配置
      JWT_SECRET: 'soybean-admin-jwt-secret-key-change-in-production-environment-32chars'
      REFRESH_TOKEN_SECRET: 'soybean-admin-refresh-secret-key-change-in-production-environment-32chars'
      SERVICE_SECRET: 'soybean-admin-service-secret-key-change-in-production-environment-32chars'
      JWT_EXPIRES_IN: '2h'
      REFRESH_TOKEN_EXPIRES_IN: '7d'
      JWT_ISSUER: 'soybean-admin'
      JWT_AUDIENCE: 'soybean-admin-client'
      JWT_ALGORITHM: 'HS256'
      ENABLE_TOKEN_BLACKLIST: 'true'
      ENABLE_SESSION_MANAGEMENT: 'true'

      # Docker部署配置
      DOCKER_ENV: 'true'
      AUTO_INIT_DATA: 'true'
      FIRST_RUN_DETECTION: 'true'
      RUN_MIGRATIONS: 'true'
      HEALTH_CHECK_ENABLED: 'true'

      # 服务间通信配置
      BACKEND_URL: 'http://backend:9528'
      AMIS_BACKEND_URL: 'http://amis-backend:9522'
      AMIS_BACKEND_PATH: '/app/amis-backend'

      # 数据同步配置
      DATA_SYNC_ENABLED: 'true'
      DATA_SYNC_INTERVAL: '30000'
      DATA_SYNC_BATCH_SIZE: '100'

      # 性能和监控配置
      METRICS_ENABLED: 'true'
      PERFORMANCE_MONITORING: 'true'
      LOG_LEVEL: 'info'

      # CORS配置
      CORS_ENABLED: 'true'
      CORS_ORIGIN: 'http://localhost:9527,http://127.0.0.1:9527,http://localhost:9528,http://127.0.0.1:9528,http://localhost:9522,http://127.0.0.1:9522'
      CORS_METHODS: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS'
      CORS_CREDENTIALS: 'true'

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    ports:
      - '3000:3000'
    networks:
      - soybean-admin
    volumes:
      - generated_code:/app/generated
      - logs_data:/app/logs
      - uploads_data:/app/uploads
      - ./amis-lowcode-backend:/app/amis-backend:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    restart: unless-stopped

  # Amis低代码后端
  amis-backend:
    build:
      context: amis-lowcode-backend/
      dockerfile: Dockerfile
    container_name: soybean-amis-backend
    environment:
      TZ: Asia/Shanghai
      SERVICE_NAME: amis-lowcode
      NODE_ENV: production
      PORT: 9522

      # 数据库配置
      DATABASE_URL: 'postgresql://postgres:password@postgres:5432/soybean_admin?schema=public'

      # Redis配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ''
      REDIS_DB: 2

      # 统一JWT认证配置
      JWT_SECRET: 'soybean-admin-jwt-secret-key-change-in-production-environment-32chars'
      REFRESH_TOKEN_SECRET: 'soybean-admin-refresh-secret-key-change-in-production-environment-32chars'
      SERVICE_SECRET: 'soybean-admin-service-secret-key-change-in-production-environment-32chars'
      JWT_EXPIRES_IN: '2h'
      REFRESH_TOKEN_EXPIRES_IN: '7d'
      JWT_ISSUER: 'soybean-admin'
      JWT_AUDIENCE: 'soybean-admin-client'
      JWT_ALGORITHM: 'HS256'
      ENABLE_TOKEN_BLACKLIST: 'true'
      ENABLE_SESSION_MANAGEMENT: 'true'

      # Docker部署配置
      DOCKER_ENV: 'true'
      AUTO_INIT_DATA: 'true'
      FIRST_RUN_DETECTION: 'true'
      RUN_MIGRATIONS: 'true'
      HEALTH_CHECK_ENABLED: 'true'

      # 服务间通信配置
      BACKEND_URL: 'http://backend:9528'
      LOWCODE_PLATFORM_URL: 'http://lowcode-platform:3000'

      # 低代码平台配置
      AMIS_BACKEND_PATH: '/app/amis-backend'

      # 数据同步配置
      DATA_SYNC_ENABLED: 'true'
      DATA_SYNC_INTERVAL: '30000'

      # 性能和监控配置
      METRICS_ENABLED: 'true'
      PERFORMANCE_MONITORING: 'true'
      LOG_LEVEL: 'info'

      # CORS配置
      CORS_ENABLED: 'true'
      CORS_ORIGIN: 'http://localhost:9527,http://127.0.0.1:9527,http://localhost:3000,http://127.0.0.1:3000,http://localhost:9555,http://127.0.0.1:9555'
      CORS_METHODS: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS'
      CORS_CREDENTIALS: 'true'

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - '9522:9522'
    networks:
      - soybean-admin
    volumes:
      - amis_generated:/app/generated
      - logs_data:/app/amis-logs
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9522/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    restart: unless-stopped

  # 前端应用（可选）
  # frontend:
  #   build:
  #     context: frontend/
  #     dockerfile: Dockerfile
  #   container_name: soybean-frontend
  #   environment:
  #     TZ: Asia/Shanghai
  #     NODE_ENV: production
  #
  #     # API配置
  #     VITE_API_URL: 'http://localhost:9528'
  #     VITE_LOWCODE_API_URL: 'http://localhost:3000'
  #     VITE_AMIS_API_URL: 'http://localhost:9522'
  #
  #   depends_on:
  #     - backend
  #     - lowcode-platform
  #     - amis-backend
  #   ports:
  #     - '9527:80'
  #   networks:
  #     - soybean-admin
  #   restart: unless-stopped
