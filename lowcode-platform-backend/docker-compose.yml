version: '3.8'

services:
  # 低代码平台后端服务
  lowcode-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lowcode-platform-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://lowcode:lowcode123@postgres:5432/lowcode_platform
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=7d
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./generated:/app/generated
    networks:
      - lowcode-network

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: lowcode-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=lowcode_platform
      - POSTGRES_USER=lowcode
      - POSTGRES_PASSWORD=lowcode123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - lowcode-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: lowcode-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - lowcode-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: lowcode-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - lowcode-backend
    networks:
      - lowcode-network

volumes:
  postgres_data:
  redis_data:

networks:
  lowcode-network:
    driver: bridge
