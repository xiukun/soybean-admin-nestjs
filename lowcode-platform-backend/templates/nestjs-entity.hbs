// Prisma schema for {{entityName}}
model {{entityName}} {
  id String @id @default(cuid())

{{#if enableTenancy}}
  tenantId String? @map("tenant_id")

{{/if}}
{{#each fields}}
{{#unless isPrimaryKey}}
  {{code}} {{mapTypeToPrisma type}}{{#if nullable}}?{{/if}}{{#if isUnique}} @unique{{/if}}{{#if defaultValue}} @default({{#if (eq type 'STRING')}}"{{defaultValue}}"{{else}}{{defaultValue}}{{/if}}){{/if}} @map("{{snakeCase code}}"){{#if description}} // {{description}}{{/if}}
{{/unless}}
{{/each}}

{{/unless}}
{{/each}}

{{#if hasRelations}}
  // Relations
{{#each relations}}
  {{#if (eq relationType 'OneToOne')}}
  {{relationName}} {{targetEntity}}? @relation(fields: [{{relationName}}Id], references: [id])
  {{relationName}}Id String? @map("{{snakeCase relationName}}_id")
  {{/if}}
  {{#if (eq relationType 'OneToMany')}}
  {{relationName}} {{targetEntity}}[]
  {{/if}}
  {{#if (eq relationType 'ManyToOne')}}
  {{relationName}} {{targetEntity}}? @relation(fields: [{{relationName}}Id], references: [id])
  {{relationName}}Id String? @map("{{snakeCase relationName}}_id")
  {{/if}}
  {{#if (eq relationType 'ManyToMany')}}
  {{relationName}} {{targetEntity}}[] @relation("{{entityName}}{{targetEntity}}")
  {{/if}}
{{/each}}
{{/if}}

{{#if enableAudit}}
  createdBy String? @map("created_by")
  updatedBy String? @map("updated_by")
{{/if}}
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

{{#if enableSoftDelete}}
  deletedAt DateTime? @map("deleted_at")
{{/if}}
{{#if enableStatus}}
  status String @default("ACTIVE") @map("status")
{{/if}}
{{#if enableVersioning}}
  version Int @default(1) @map("version")
{{/if}}

  @@map("{{tableName}}")
}
